{"version":3,"sources":["mocha.js"],"names":["Mocha","require","fs","mocha","testFilter","process","env","TEST","walkSync","dir","filelist","theseFiles","readdirSync","forEach","file","statSync","isDirectory","test","filter","RegExp","push","fileList","addFile","runner","run","failures","on","exit"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACAA,QAAQ,gBAAR;AACAA,QAAQ,qBAAR;AACA,IAAME,QAAQ,IAAIH,KAAJ,EAAd;AACAC,QAAQ,OAAR;;AAEA;AACA,IAAMG,aAAaC,QAAQC,GAAR,CAAYC,IAA/B;;AAEA,IAAMC,WAAW,SAAXA,QAAW,CAASC,GAAT,EAAcC,QAAd,EAAwB;AACvC,MAAMC,aAAaT,GAAGU,WAAH,CAAeH,GAAf,CAAnB;AACAC,aAAWA,YAAY,EAAvB;AACAC,aAAWE,OAAX,CAAmB,UAASC,IAAT,EAAe;AAChC;AACA,QAAIZ,GAAGa,QAAH,CAAYN,MAAM,GAAN,GAAYK,IAAxB,EAA8BE,WAA9B,EAAJ,EAAiD;AAC/CN,iBAAWF,SAASC,MAAM,GAAN,GAAYK,IAArB,EAA2BJ,QAA3B,CAAX;AACD,KAFD,MAGK;AACH;AACA,UAAI,kBAAkBO,IAAlB,CAAuBH,IAAvB,CAAJ,EAAkC;AAChC,YAAI,OAAOV,UAAP,KAAsB,QAA1B,EAAoC;AAClC,cAAMc,SAAS,IAAIC,MAAJ,CAAWf,UAAX,EAAuB,GAAvB,CAAf;AACA,cAAIc,OAAOD,IAAP,CAAYH,IAAZ,CAAJ,EAAuB;AACrBJ,qBAASU,IAAT,CAAcX,MAAM,GAAN,GAAYK,IAA1B;AACD;AACF,SALD,MAKO;AACLJ,mBAASU,IAAT,CAAcX,MAAM,GAAN,GAAYK,IAA1B;AACD;AACF;AACF;AACF,GAlBD;AAmBA,SAAOJ,QAAP;AACD,CAvBD;;AAyBA;AACA,IAAMW,WAAWb,SAAS,YAAT,CAAjB;;AAEA;AACAa,SAASR,OAAT,CAAiB,UAASC,IAAT,EAAc;AAC7BX,QAAMmB,OAAN,CACER,IADF;AAGD,CAJD;;AAMA;AACA,IAAMS,SAASpB,MAAMqB,GAAN,CAAU,UAASC,QAAT,EAAkB;AACzCpB,UAAQqB,EAAR,CAAW,MAAX,EAAmB,YAAY;AAC7BrB,YAAQsB,IAAR,CAAaF,QAAb,EAD6B,CACJ;AAC1B,GAFD;AAGD,CAJc,CAAf;;AAMAF,OAAOG,EAAP,CAAU,KAAV,EAAiB,YAAY;AAC3BrB,UAAQsB,IAAR,CAAa,CAAb;AACD,CAFD","file":"mocha.js","sourcesContent":["const Mocha = require('mocha');\nconst fs = require('fs');\nrequire('babel-polyfill');\nrequire('babel-core/register');\nconst mocha = new Mocha();\nrequire('./app');\n\n// Filter tests based on string\nconst testFilter = process.env.TEST;\n\nconst walkSync = function(dir, filelist) {\n  const theseFiles = fs.readdirSync(dir);\n  filelist = filelist || [];\n  theseFiles.forEach(function(file) {\n    // Iterate sub-directories\n    if (fs.statSync(dir + '/' + file).isDirectory()) {\n      filelist = walkSync(dir + '/' + file, filelist);\n    }\n    else {\n      // Add tests\n      if (/controller.test/.test(file)) {\n        if (typeof testFilter === 'string') {\n          const filter = new RegExp(testFilter, 'i');\n          if (filter.test(file)) {\n            filelist.push(dir + '/' + file);\n          }\n        } else {\n          filelist.push(dir + '/' + file);\n        }\n      }\n    }\n  });\n  return filelist;\n};\n\n// Compile list of tests\nconst fileList = walkSync('server/api');\n\n// Add tests to mocha\nfileList.forEach(function(file){\n  mocha.addFile(\n    file\n  );\n});\n\n// Run the tests.\nconst runner = mocha.run(function(failures){\n  process.on('exit', function () {\n    process.exit(failures);  // exit with non-zero status if there were failures\n  });\n});\n\nrunner.on('end', function () {\n  process.exit(1);\n});\n\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}