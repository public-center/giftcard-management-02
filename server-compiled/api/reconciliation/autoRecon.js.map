{"version":3,"sources":["api/reconciliation/autoRecon.js"],"names":["find","populate","companies","company","getSettings","settings","localTime","tz","timezone","hour","fakeReq","params","companyId","_id","storeId","body","userTime","format","user","users","fakeRes","status","json","console","log","reconciliateCards","intervalLength","setTimeout","autoRecon"],"mappings":";;;;;;;qEAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE4B,kBAAQA,IAAR,CAAa,EAAb,EAAiBC,QAAjB,CAA0B,OAA1B,CAF5B;;AAAA;AAEUC,qBAFV;AAAA;AAAA;AAAA;AAAA;AAAA,wBAI0BA,SAJ1B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIeC,mBAJf;AAAA;AAAA,mBAK6BA,QAAQC,WAAR,EAL7B;;AAAA;AAKYC,oBALZ;AAMYC,qBANZ,GAMwB,wBAASC,EAAT,CAAYF,SAASG,QAArB,CANxB;;AAAA,kBAQUF,UAAUG,IAAV,OAAqB,CAR/B;AAAA;AAAA;AAAA;;AASQ;AACMC,mBAVd,GAUwB;AACdC,sBAAQ;AACNC,2BAAWT,QAAQU,GADb;AAENC,yBAAS;AAFH,eADM;AAKdC,oBAAM;AACJC,0BAAUV,UAAUW,MAAV;AADN,eALQ;AAQdC,oBAAMf,QAAQgB,KAAR,CAAc,CAAd;AARQ,aAVxB;AAoBcC,mBApBd,GAoBwB;AACdC,sBAAQ,kBAAY;AAAE,uBAAO,IAAP;AAAc,eADtB;AAEdC,oBAAM,gBAAY;AAAE,uBAAO,IAAP;AAAc;AAFpB,aApBxB;AAAA;AAAA,mBAyBc,yBAAUZ,OAAV,EAAmBU,OAAnB,CAzBd;;AAAA;AAAA;AAAA,mBA0Bc,gCAAiBV,OAAjB,EAA0BU,OAA1B,CA1Bd;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA8BIG,oBAAQC,GAAR,CAAY,kCAAZ;AACAD,oBAAQC,GAAR,CAAY,4EAAZ;AACAD,oBAAQC,GAAR;;AAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,iB;;;;;AAlBf;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AAGA;;;;;;AAEA,IAAMC,iBAAiB,OAAO,IAA9B;;;sEAsCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPD,mBADO;;AAAA;AAEbE,uBAAW,YAAM;AACfC;AACD,aAFD,EAEGF,cAFH;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeE,S;;;;SAAAA,S","file":"api/reconciliation/autoRecon.js","sourcesContent":["import moment from 'moment';\nimport 'moment-timezone';\n\nimport '../company/autoBuyRate.model';\nimport '../company/companySettings.model';\nimport '../inventory/InventoryCache.model';\nimport '../inventory/inventoryParamCache.model';\nimport '../log/logs.model';\nimport '../company/company.model';\nimport '../card/card.model';\nimport '../stores/store.model';\nimport '../reserve/reserve.model';\n\nimport Company from '../company/company.model';\nimport {reconcile, markAsReconciled} from '../company/company.controller';\n\nconst intervalLength = 3600 * 1000;\n\nasync function reconciliateCards() {\n  try {\n    const companies = await Company.find({}).populate('users');\n\n    for (const company of companies) {\n      const settings = await company.getSettings();\n      const localTime = moment().tz(settings.timezone);\n\n      if (localTime.hour() === 0) {\n        // oshit, it's time for da midnite partaaayyyy!\n        const fakeReq = {\n          params: {\n            companyId: company._id,\n            storeId: 'all'\n          },\n          body: {\n            userTime: localTime.format()\n          },\n          user: company.users[0]\n        };\n        const fakeRes = {\n          status: function () { return this; },\n          json: function () { return this; }\n        };\n\n        await reconcile(fakeReq, fakeRes);\n        await markAsReconciled(fakeReq, fakeRes);\n      }\n    }\n  } catch (e) {\n    console.log('Aaargghhh, I neeed a medic baaag');\n    console.log('I HAVE HAD IT WITH THESE MOTHERFUCKING SNAKES ON THIS MOTHERFUCKING PLANE!');\n    console.log(e);\n  }\n}\n\nexport default async function autoRecon() {\n  await reconciliateCards();\n  setTimeout(() => {\n    autoRecon();\n  }, intervalLength);\n}\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}