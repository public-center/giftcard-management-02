{"version":3,"sources":["api/callbackLog/validationRules.js"],"names":["validCallbacks","rule","message","async","model","enum","join","companyId"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,iBAAiB,CAAC,YAAD,EAAe,eAAf,EAAgC,oBAAhC,EAAsD,QAAtD,EAAgE,QAAhE,EAA0E,2BAA1E,CAAvB;AACA;;;kBAGe;AACb,mCAAiC;AAC/B,cAAU,CACR,EAACC,4BAAD,EAAmBC,SAAS,oBAA5B,EADQ,EAER,EAACC,+BAAD,EAAsBC,OAAO,MAA7B,EAAqCF,SAAS,qBAA9C,EAFQ,CADqB;AAK/B,oBAAgB,CACd,EAACG,MAAML,cAAP,EAAuBE,qDAAmDF,eAAeM,IAAf,CAAoB,IAApB,CAA1E,EADc;AALe,GADpB;AAUb,kBAAgB;AACd,aAAS,CACP,EAACL,8BAAD,EAAqBC,SAAS,kDAA9B,EADO,CADK;AAId,WAAO,CACL,EAACD,8BAAD,EAAqBC,SAAS,gDAA9B,EADK;AAJO,GAVH;AAkBb,yBAAuB;AACrBK,eAAW,CACT,EAACN,4BAAD,EAAmBC,SAAS,uBAA5B,EADS,EAET,EAACC,+BAAD,EAAsBC,OAAO,SAA7B,EAAwCF,SAAS,wBAAjD,EAFS;AADU;AAlBV,C","file":"api/callbackLog/validationRules.js","sourcesContent":["import {isObjectId, recordExists, isSimpleDate} from '../../helpers/validation';\n\nconst validCallbacks = ['biComplete', 'cardFinalized', 'cqPaymentInitiated', 'denial', 'credit', 'biUnavailableCardAccepted'];\n/**\n * Validation rules for callbackLog route\n */\nexport default {\n  '/reFire/:cardId/:callbackType': {\n    'cardId': [\n      {rule: isObjectId, message: 'Card ID is invalid'},\n      {async: recordExists, model: 'Card', message: 'Card does not exist'},\n    ],\n    'callbackType': [\n      {enum: validCallbacks, message: `Callback must be one of the following: ${validCallbacks.join(', ')}`},\n    ]\n  },\n  '/:begin/:end': {\n    'begin': [\n      {rule: isSimpleDate, message: 'Begin must have the following format: YYYY-MM-DD'},\n    ],\n    'end': [\n      {rule: isSimpleDate, message: 'End must have the following format: YYYY-MM-DD'},\n    ]\n  },\n  '/fireAll/:companyId': {\n    companyId: [\n      {rule: isObjectId, message: 'Company ID is invalid'},\n      {async: recordExists, model: 'Company', message: 'Company does not exist'},\n    ]\n  }\n}\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}