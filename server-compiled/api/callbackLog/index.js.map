{"version":3,"sources":["api/callbackLog/index.js"],"names":["express","require","controller","auth","router","Router","get","isAuthenticated","getCallbacksInDateRange","post","refireCallbackFromList","reFireCallback","fireAllCallbacks","module","exports"],"mappings":"AAAA;;AAKA;;AACA;;;;;;AAJA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,0BAAR,CAAnB;AACA,IAAME,OAAOF,QAAQ,sBAAR,CAAb;;;AAIA,IAAMG,SAASJ,QAAQK,MAAR,EAAf;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgBH,KAAKI,eAAL,EAAhB,EAAwCL,WAAWM,uBAAnD;AACA;AACAJ,OAAOK,IAAP,CAAY,4BAAZ,EAA0CN,KAAKI,eAAL,EAA1C,EAAkEL,WAAWQ,sBAA7E;AACA;AACAN,OAAOK,IAAP,CAAY,+BAAZ,EAA6CN,KAAKI,eAAL,CAAqB,IAArB,4BAA7C,EAA0FL,WAAWS,cAArG;AACA;AACAP,OAAOK,IAAP,CAAY,qBAAZ,EAAmCN,KAAKI,eAAL,CAAqB,IAArB,4BAAnC,EAAgFL,WAAWU,gBAA3F;AACA;AACAR,OAAOE,GAAP,CAAW,cAAX,EAA2BH,KAAKI,eAAL,CAAqB,IAArB,4BAA3B,EAAwEL,WAAWM,uBAAnF;;AAEAK,OAAOC,OAAP,GAAiBV,MAAjB;;AAEA;;AAEA","file":"api/callbackLog/index.js","sourcesContent":["'use strict';\n\nconst express = require('express');\nconst controller = require('./callbackLog.controller');\nconst auth = require('../auth/auth.service');\nimport {prepareValidationRules} from '../../helpers/validation';\nimport validationRules from './validationRules';\n\nconst router = express.Router();\n\n// Get all callback logs\nrouter.get('/', auth.isAuthenticated(), controller.getCallbacksInDateRange);\n// Force re-run of callbacks which have already been sent based on a list\nrouter.post('/reFire/:callbackType/list', auth.isAuthenticated(), controller.refireCallbackFromList);\n// Re-run callbacks for a card which should have been sent but weren't\nrouter.post('/reFire/:cardId/:callbackType', auth.isAuthenticated(true, validationRules), controller.reFireCallback);\n// Re-run callbacks for a card which should have been sent but weren't\nrouter.post('/fireAll/:companyId', auth.isAuthenticated(true, validationRules), controller.fireAllCallbacks);\n// Get callback logs for a time range\nrouter.get('/:begin/:end', auth.isAuthenticated(true, validationRules), controller.getCallbacksInDateRange);\n\nmodule.exports = router;\n\n// db.inventories.find({company: c._id, 'transaction.callbacks': 'cqPaymentInitiated'}).limit(5).forEach(function (i) {c = db.cards.findOne({_id: i.card});print(c._id);})\n\n/*\n 596bc1bfb0447615186a82dc,\n 596bc1f9b0447615186a82e1,\n 596bc62dbc6d910eccd570a6,\n 596bd202bc6d910eccd570aa,\n 596bd6cabc6d910eccd570ae\n */\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}