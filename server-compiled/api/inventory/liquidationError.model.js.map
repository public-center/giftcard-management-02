{"version":3,"sources":["api/inventory/liquidationError.model.js"],"names":["mongoose","require","Promise","Schema","LiquidationErrorModel","inventory","type","Types","ObjectId","ref","required","errorText","String","created","Date","default","now","module","exports","model"],"mappings":"AAAA;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACAD,SAASE,OAAT,GAAmBD,QAAQ,UAAR,CAAnB;AACA,IAAME,SAASH,SAASG,MAAxB;;AAEA,IAAMC,wBAAwB,IAAID,MAAJ,CAAW;AACvC;AACAE,aAAW,EAACC,MAAMH,OAAOI,KAAP,CAAaC,QAApB,EAA8BC,KAAK,WAAnC,EAAgDC,UAAU,IAA1D,EAF4B;AAGvC;AACAC,aAAWC,MAJ4B;AAKvC;AACAN,QAAM,EAACA,MAAMM,MAAP,EAAeF,UAAU,IAAzB,EANiC;AAOvC;AACAG,WAAS;AACPP,UAAMQ,IADC;AAEPC,aAASD,KAAKE;AAFP;AAR8B,CAAX,CAA9B;;AAcAC,OAAOC,OAAP,GAAiBlB,SAASmB,KAAT,CAAe,kBAAf,EAAmCf,qBAAnC,CAAjB","file":"api/inventory/liquidationError.model.js","sourcesContent":["'use strict';\n\nconst mongoose = require('mongoose');\nmongoose.Promise = require('bluebird');\nconst Schema = mongoose.Schema;\n\nconst LiquidationErrorModel = new Schema({\n  // Inventory ID\n  inventory: {type: Schema.Types.ObjectId, ref: 'Inventory', required: true},\n  // Liquidation error\n  errorText: String,\n  // When the error occurred OneOf(saving, rate, sell, confirm)\n  type: {type: String, required: true},\n  // When original record is created\n  created: {\n    type: Date,\n    default: Date.now\n  }\n});\n\nmodule.exports = mongoose.model('LiquidationError', LiquidationErrorModel);\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}