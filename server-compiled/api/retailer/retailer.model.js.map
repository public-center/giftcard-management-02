{"version":3,"sources":["api/retailer/retailer.model.js"],"names":["mongoose","require","Promise","Schema","smpEnumToAttr","saveya","cardcash","cardpool","giftcardzen","RetailerSchema","name","type","String","required","gsId","aiId","image","url","original","imageUrl","imageOriginal","imageType","buyRate","Number","sellRates","saveYa","cardCash","cardPool","giftcardZen","best","sellTo","sellRatesMerch","smpSpelling","smpMaxMin","max","min","smpMaxMinMerch","smpType","enum","get","convertToLowerCase","set","smpTypeMerch","apiId","verification","phone","buyRates","Object","buyRateRelations","Types","ObjectId","ref","pinRequired","Boolean","default","indexes","path","validate","length","respond","constructor","findOne","err","company","id","methods","getSellRatesMerch","forEach","smp","getSmpMaxMinMerch","maxMin","k","getSmpTypeMerch","types","populateMerchValues","parent","retailer","merchandise","merchRates","merchMaxMin","merchType","toObject","assign","getSellRates","getSmpMaxMin","getSmpType","getSmpSpelling","whatever","toLowerCase","getters","module","exports","model"],"mappings":"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","file":"api/retailer/retailer.model.js","sourcesContent":["'use strict';\n\nimport {getActiveSmps} from '../../helpers/smp';\n\nconst mongoose = require('mongoose');\nmongoose.Promise = require('bluebird');\nimport createIndexes from '../../config/indexDb';\nconst Schema = mongoose.Schema;\n\nconst smpEnumToAttr = {\n  saveya: 'saveYa',\n  cardcash: 'cardCash',\n  cardpool: 'cardPool',\n  giftcardzen: 'giftcardZen'\n};\n\nconst RetailerSchema = new Schema({\n  // Company name\n  name: {\n    type: String,\n    required: true\n  },\n  // GiftSquirrel ID\n  gsId: String,\n  // Addtoit ID\n  aiId: String,\n  image: {\n    url: String,\n    original: String,\n    type: String\n  },\n  imageUrl: String,\n  imageOriginal: String,\n  imageType: String,\n  buyRate: Number,\n  sellRates: {\n    saveYa: Number,\n    cardCash: Number,\n    cardPool: Number,\n    giftcardZen: Number,\n    best: Number,\n    sellTo: String\n  },\n  sellRatesMerch: {\n    saveYa: Number,\n    cardCash: Number,\n    cardPool: Number,\n    giftcardZen: Number,\n  },\n  // Spelling\n  smpSpelling: {\n    saveYa: {type: String},\n    cardCash: {type: String},\n    cardPool: {type: String},\n    giftcardZen: {type: String},\n  },\n  // Max/min for retailers by SMP\n  smpMaxMin: {\n    saveYa: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    },\n    cardCash: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    },\n    cardPool: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    },\n    giftcardZen: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    }\n  },\n  smpMaxMinMerch: {\n    saveYa: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    },\n    cardCash: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    },\n    cardPool: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    },\n    giftcardZen: {\n      max: {type: Number, min: 0},\n      min: {type: Number, min: 0}\n    }\n  },\n  // SMP type (electronic, physical, disabled)\n  smpType: {\n    saveYa: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n    cardCash: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n    cardPool: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n    giftcardZen: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase}\n  },\n  smpTypeMerch: {\n    saveYa: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n    cardCash: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n    cardPool: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n    giftcardZen: {type: String, enum: ['physical', 'electronic', 'disabled'], get: convertToLowerCase, set: convertToLowerCase},\n  },\n  // API IDs (the ID for SMP APIs)\n  apiId: {\n    saveYa: String,\n    cardCash: String,\n    cardPool: String,\n    giftcardZen: String\n  },\n  // Verification info\n  verification: {\n    url: String,\n    phone: String\n  },\n  // CardQuiry buy rate\n  buyRates: Object,\n  buyRateRelations: [{type: Schema.Types.ObjectId, ref: 'BuyRate'}],\n  original: {type: Schema.Types.ObjectId, ref: 'Retailer'},\n  pinRequired: {type: Boolean, default: false}\n});\n\n// Indexes\nconst indexes = [\n  [{name: 1}],\n  [{gsId: 1}],\n  [{aiId: 1}],\n];\ncreateIndexes(RetailerSchema, indexes);\n\n/**\n * Validations\n */\n\n// Validate empty name\nRetailerSchema\n  .path('name')\n  .validate(function (name) {\n    return name.length;\n  }, 'Retailer name cannot be blank');\n\n// Validate duplicate names\nRetailerSchema\n  .path('name')\n  .validate(function(name, respond) {\n    this.constructor.findOne({name}, (err, company) => {\n      if (err) {\n        throw err;\n      }\n      if (company) {\n        if (this.id === company.id) {\n          return respond(true);\n        }\n        return respond(false);\n      }\n      respond(true);\n    });\n  }, 'Retailer name is already taken');\n\nRetailerSchema.methods.getSellRatesMerch = function () {\n  const sellRates = this.sellRatesMerch || {};\n\n  getActiveSmps().forEach(smp => {\n    if (typeof sellRates[smpEnumToAttr[smp]] === 'undefined') {\n      sellRates[smpEnumToAttr[smp]] = this.sellRates[smpEnumToAttr[smp]];\n    }\n  });\n\n  return sellRates;\n};\n\nRetailerSchema.methods.getSmpMaxMinMerch = function () {\n  const maxMin = this.smpMaxMinMerch || {};\n\n  getActiveSmps().forEach(smp => {\n    if (typeof maxMin[smpEnumToAttr[smp]] === 'undefined') {\n      maxMin[smpEnumToAttr[smp]] = {};\n    }\n\n    ['max', 'min'].forEach(k => {\n      if (typeof maxMin[smpEnumToAttr[smp]][k] === 'undefined') {\n        maxMin[smpEnumToAttr[smp]][k] = this.smpMaxMin[smpEnumToAttr[smp]][k];\n      }\n    });\n  });\n\n  return maxMin;\n};\n\nRetailerSchema.methods.getSmpTypeMerch = function () {\n  const types = this.smpTypeMerch || {};\n\n  getActiveSmps().forEach(smp => {\n    if (typeof types[smpEnumToAttr[smp]] === 'undefined') {\n      types[smpEnumToAttr[smp]] = this.smpType[smpEnumToAttr[smp]];\n    }\n  });\n\n  return types;\n};\n\n/**\n * Populate a retailer attached to a card or inventory with merch values if necessary\n * @param parent Card or inventory record\n */\nRetailerSchema.methods.populateMerchValues = (parent) => {\n  let retailer = parent.retailer;\n  if (parent.merchandise) {\n    // Assign merch values, assume default if not set\n    const merchRates = retailer.getSellRatesMerch();\n    const merchMaxMin = retailer.getSmpMaxMinMerch();\n    const merchType = retailer.getSmpTypeMerch();\n    retailer = retailer.toObject();\n    Object.assign(retailer.sellRates, merchRates.toObject());\n    Object.assign(retailer.smpMaxMin, merchMaxMin.toObject());\n    Object.assign(retailer.smpType, merchType.toObject());\n    return retailer;\n  } else {\n    // Convert to object if necessary\n    if (retailer.constructor.name === 'model') {\n      return retailer.toObject();\n    } else {\n      return retailer;\n    }\n  }\n};\n\nRetailerSchema.methods.getSellRates = function () {\n  getActiveSmps().forEach(smp => {\n    if (typeof this.sellRates[smpEnumToAttr[smp]] === 'undefined') {\n      this.sellRates[smpEnumToAttr[smp]] = 0;\n    }\n  });\n\n  return this.sellRates;\n};\n\nRetailerSchema.methods.getSmpMaxMin = function () {\n  getActiveSmps().forEach(smp => {\n    if (typeof this.smpMaxMin[smpEnumToAttr[smp]] === 'undefined') {\n      this.smpMaxMin[smpEnumToAttr[smp]] = {max: null, min: 0};\n    }\n\n    ['max', 'min'].forEach(k => {\n      if (typeof this.smpMaxMin[smpEnumToAttr[smp]][k] === 'undefined') {\n        this.smpMaxMin[smpEnumToAttr[smp]][k] = k === 'min' ? 0 : null;\n      }\n    })\n  });\n\n  return this.smpMaxMin;\n};\n\nRetailerSchema.methods.getSmpType = function () {\n  getActiveSmps().forEach(smp => {\n    if (typeof this.smpType[smpEnumToAttr[smp]] === 'undefined') {\n      this.smpType[smpEnumToAttr[smp]] = 'disabled';\n    }\n  });\n\n  return this.smpType;\n};\n\nRetailerSchema.methods.getSmpSpelling = function () {\n  getActiveSmps().forEach(smp => {\n    if (typeof this.smpSpelling[smpEnumToAttr[smp]] === 'undefined' || this.smpSpelling[smpEnumToAttr[smp]] === '') {\n      this.smpSpelling[smpEnumToAttr[smp]] = this.name;\n    }\n  });\n\n  return this.smpSpelling;\n};\n\nfunction convertToLowerCase(whatever) {\n  if (whatever) {\n    return whatever.toLowerCase();\n  }\n}\n\nRetailerSchema.set('toJSON', {getters: true});\nRetailerSchema.set('toObject', {getters: true});\n\nmodule.exports = mongoose.model('Retailer', RetailerSchema);\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}