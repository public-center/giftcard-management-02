{"version":3,"sources":["api/retailer/index.js"],"names":["express","require","controller","config","auth","multer","upload","dest","__dirname","router","Router","get","importCsv","retailerImages","retailerImageTypes","addRetailerUrl","isAuthenticated","getRetailersNew","post","req","res","next","csv","queryRetailers","getAllRetailers","hasRole","getAllRates","getBiInfo","updateBiInfo","biInfoCsv","salesStats","createNewRetailerBasedOnOldOne","updateRates","array","uploadCcRatesDoc","uploadCpRatesDoc","uploadElectronicPhysical","uploadGcrRates","uploadGcrPhysical","uploadGcrElectronic","setGsId","setProp","syncWithBi","toggleDisableForCompany","createRetailer","module","exports"],"mappings":"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","file":"api/retailer/index.js","sourcesContent":["'use strict';\n\nconst express = require('express');\nconst controller = require('./retailer.controller');\nconst config = require('../../config/environment');\nconst auth = require('../auth/auth.service');\nconst multer = require('multer');\nconst upload = multer({dest: __dirname + '/rates/'});\n\nconst router = express.Router();\n\n/**\n * Helpers\n */\n  // Import retailers\nrouter.get('/import-csv', controller.importCsv);\n// Get retailer images\nrouter.get('/retailer-images', controller.retailerImages);\n// Save images type to retailer objects\nrouter.get('/retailer-image-types', controller.retailerImageTypes);\n// Import URL/phone\nrouter.get('/import-url', controller.addRetailerUrl);\n\n/**\n * Real API calls\n */\n// Get retailers associated with a store\nrouter.get('/store/:storeId', auth.isAuthenticated(), controller.getRetailersNew);\n// Get retailers associated with a store, with a min value set\nrouter.get('/store/:storeId/min/:minVal', auth.isAuthenticated(), controller.getRetailersNew);\n// Get store buy/sell rates as CSV\nrouter.post('/store/:storeId/min/:minVal/csv', auth.isAuthenticated(), (req, res, next) => {\n  req.csv = true;\n  next();\n}, controller.getRetailersNew);\n// Query retailers\nrouter.get('/', auth.isAuthenticated(), controller.queryRetailers);\n// Get all retailers\nrouter.get('/all', auth.isAuthenticated(), controller.getAllRetailers);\n// Get all rates\nrouter.get('/rates', auth.hasRole('admin'), controller.getAllRates);\n// BI info\nrouter.get('/biInfo', auth.hasRole('admin'), controller.getBiInfo);\nrouter.post('/biInfo', auth.hasRole('admin'), controller.updateBiInfo);\nrouter.get('/biInfo/csv', auth.hasRole('admin'), controller.biInfoCsv);\n// Count the number of retailers by card\nrouter.get('/salesStats', auth.hasRole('admin'), controller.salesStats);\n// Create new retailer based on an old one\nrouter.post('/createLike', auth.hasRole('admin'), controller.createNewRetailerBasedOnOldOne);\n// Update rates ON LQ API\nrouter.post('/rates/update', auth.hasRole('admin'), controller.updateRates);\n// Upload CC doc\nrouter.post('/settings/cc/rates', auth.hasRole('admin'), upload.array('ccRates', 1), controller.uploadCcRatesDoc);\n// Upload CardPool doc\nrouter.post('/settings/cp/rates', auth.hasRole('admin'), upload.array('cpRates', 1), controller.uploadCpRatesDoc);\n// Upload CardPool electronic/physical retailers doc\nrouter.post('/settings/cp/electronicPhysical', auth.hasRole('admin'), upload.array('cpElectronicPhysical', 1),\n  controller.uploadElectronicPhysical);\n// Upload Giftcard Rescue rates\nrouter.post('/settings/gcr/rates', auth.hasRole('admin'), upload.array('rates', 1), controller.uploadGcrRates);\n// Upload Giftcard Rescue physical retailers\nrouter.post('/settings/gcr/physical', auth.hasRole('admin'), upload.array('physical', 1), controller.uploadGcrPhysical);\n// Upload Giftcard Rescue electronic retailers\nrouter.post('/settings/gcr/electronic', auth.hasRole('admin'), upload.array('electronic', 1), controller.uploadGcrElectronic);\n// Change GiftSquirrel ID\nrouter.post('/:retailerId/gsId', auth.hasRole('admin'), controller.setGsId);\n// Set retailer prop\nrouter.post('/:retailerId/setProp', auth.hasRole('admin'), controller.setProp);\n// Sync GCMGR with BI\nrouter.post('/syncWithBi', auth.hasRole('admin'), controller.syncWithBi);\n// Disable retailers for a specific company\nrouter.post('/toggleDisableForCompany', auth.hasRole('admin'), controller.toggleDisableForCompany);\nrouter.post('/createRetailer', auth.hasRole('admin'), controller.createRetailer);\n\nmodule.exports = router;\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}