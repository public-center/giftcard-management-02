{"version":3,"sources":["api/user/user.controller.js"],"names":["_","User","require","Company","passport","config","jwt","validationError","res","err","status","json","generalError","exports","index","req","find","populate","then","users","catch","create","method","controller","revision","stack","error","newUser","body","token","provider","role","save","show","findById","params","id","employee","destroy","findByIdAndRemove","user","send","changePassword","next","userId","_id","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","modifyUser","thisUser","firstName","lastName","email","company","toString","store","hashedPassword","console","log","message","changeRole","authCallback","redirect"],"mappings":"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","file":"api/user/user.controller.js","sourcesContent":["'use strict';\n\nimport '../company/autoBuyRate.model';\nimport '../company/companySettings.model';\nimport '../inventory/InventoryCache.model';\nimport '../inventory/inventoryParamCache.model';\nimport '../log/logs.model';\nimport '../company/company.model';\nimport '../card/card.model';\nimport '../stores/store.model';\nimport '../reserve/reserve.model';\n\nconst User = require('./user.model');\nconst Company = require('../company/company.model');\nconst passport = require('passport');\nconst config = require('../../config/environment');\nconst jwt = require('jsonwebtoken');\nimport * as _ from 'lodash';\n\nimport ErrorLog from '../errorLog/errorLog.model';\nimport {getGitRev} from '../../helpers/errors';\n\nconst validationError = function(res, err) {\n  return res.status(422).json(err);\n};\n\n// General errors\nconst generalError = (err, res) => {\n  return res.status(500).json(err);\n};\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexports.index = function(req, res) {\n  User.find({})\n    .populate('company')\n    .populate('store')\n    .then(users => {\n      return res.status(200).json(users);\n    })\n    .catch(async err => {\n      await ErrorLog.create({\n        method: 'index',\n        controller: 'user.controller',\n        revision: getGitRev(),\n        stack: err.stack,\n        error: err\n      });\n      return res.status(500).json(err);\n    });\n};\n\n/**\n * Creates a new user\n */\nexports.create = function (req, res) {\n  const newUser = new User(req.body);\n  let token;\n  newUser.provider = 'local';\n  newUser.role = req.body.role || 'user';\n  newUser.save()\n  .then(user => {\n    return res.json({token: token});\n  })\n  .catch(async err => {\n    await ErrorLog.create({\n      method: 'create',\n      controller: 'user.controller',\n      revision: getGitRev(),\n      stack: err.stack,\n      error: err\n    });\n    return res.status(500).json(err);\n  });\n};\n\n/**\n * Display user details\n */\nexports.show = function (req, res) {\n  User.findById(req.params.id)\n  .then((employee) => {\n    return res.json(employee);\n  })\n  .catch(async err => {\n    await ErrorLog.create({\n      method: 'show',\n      controller: 'user.controller',\n      revision: getGitRev(),\n      stack: err.stack,\n      error: err\n    });\n    return res.status(500).json(err);\n  });\n};\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexports.destroy = function(req, res) {\n  User.findByIdAndRemove(req.params.id, function (err, user) {\n    if (err) {\n      return res.status(500).send(err);\n    }\n    return res.status(204).send();\n  });\n};\n\n/**\n * Change a users password\n */\nexports.changePassword = function(req, res, next) {\n  const userId = req.user._id;\n  const oldPass = String(req.body.oldPassword);\n  const newPass = String(req.body.newPassword);\n\n  User.findById(userId, function (err, user) {\n    if(user.authenticate(oldPass)) {\n      user.password = newPass;\n      user.save(function(err) {\n        if (err) {\n          return validationError(res, err);\n        }\n        return res.status(200).send('');\n      });\n    } else {\n      res.status(403).send('Forbidden');\n    }\n  });\n};\n\n/**\n * Modify a user\n * @param req\n * @param res\n */\nexports.modifyUser = (req, res) => {\n  const thisUser = req.user;\n  const {firstName, lastName, email, password} = req.body;\n  // Get user\n  return User.findById(req.params.id)\n  .then(employee => {\n    // No employee\n    if (!employee) {\n      throw 'not-found';\n    }\n    // Permissions\n    if (thisUser.role !== 'admin') {\n      if (thisUser.role === 'corporate-admin' && thisUser.company.toString() !== employee.company.toString()) {\n        throw 'permissions';\n      }\n      if (thisUser.role === 'manager' && thisUser.store.toString() !== employee.store.toString()) {\n        throw 'permissions';\n      }\n    }\n    // Update props\n    employee.firstName = firstName;\n    employee.lastName = lastName;\n    employee.email = email;\n    if (password) {\n      delete employee.hashedPassword;\n      employee.password = password;\n    }\n    return employee.save();\n  })\n  .then((employee) => {\n    return res.json(employee);\n  })\n  .catch(async err => {\n    console.log('**************ERROR IN MODIFY USER**********');\n    console.log(err);\n    if (err === 'no-found') {\n      return res.status(400).json({\n        message: 'Employee not found'\n      });\n    }\n    // permissions error\n    if (err === 'permissions') {\n      return res.status(401).json({\n        message: 'Invalid permissions'\n      });\n    }\n    await ErrorLog.create({\n      method: 'modifyUser',\n      controller: 'user.controller',\n      revision: getGitRev(),\n      stack: err.stack,\n      error: err\n    });\n    return res.status(err).json(err);\n  });\n};\n\n/**\n * Change a user's role\n */\nexports.changeRole = (req, res) => {\n  const id = req.params.id;\n  const role = req.params.role;\n  User.findById(id, (err, user) => {\n    // No user\n    if (!user) {\n      return res.status(500).json({\n        error: 'User not found'\n      });\n    }\n    // Error\n    if (err) {\n      return res.json(err);\n    }\n    // Update role and save\n    user.role = role;\n    user.save((err) => {\n      if (err) {\n        return validationError(res, err);\n      }\n      return res.status(200).send();\n    });\n  });\n};\n\n/**\n * Retrieve employee info\n */\nexports.employee = function(req, res, next) {\n  const userId = req.user._id;\n  User.findById(userId)\n  .populate('company')\n  .populate('store')\n  .then((employee) => {\n    return res.json(employee);\n  })\n  .catch(async err => {\n    await ErrorLog.create({\n      method: 'employee',\n      controller: 'user.controller',\n      revision: getGitRev(),\n      stack: err.stack,\n      error: err\n    });\n    return res.status(400).json(err);\n  });\n};\n\n/**\n * Authentication callback\n */\nexports.authCallback = function(req, res, next) {\n  res.redirect('/');\n};\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}