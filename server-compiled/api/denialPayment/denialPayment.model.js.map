{"version":3,"sources":["api/denialPayment/denialPayment.model.js"],"names":["mongoose","require","Promise","Schema","DenialPaymentSchema","amount","Number","created","type","Date","default","now","userTime","customer","Types","ObjectId","ref","required","module","exports","model"],"mappings":"AAAA;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACAD,SAASE,OAAT,GAAmBD,QAAQ,UAAR,CAAnB;AACA,IAAME,SAASH,SAASG,MAAxB;;AAEA,IAAMC,sBAAsB,IAAID,MAAJ,CAAW;AACrC;AACAE,UAAQC,MAF6B;AAGrC;;;AAGAC,WAAS;AACPC,UAAMC,IADC;AAEPC,aAASD,KAAKE;AAFP,GAN4B;AAUrC;;;AAGAC,YAAU,EAACJ,MAAMC,IAAP,EAb2B;AAcrC;AACAI,YAAU,EAACL,MAAML,OAAOW,KAAP,CAAaC,QAApB,EAA8BC,KAAK,UAAnC,EAA+CC,UAAU,IAAzD;AAf2B,CAAX,CAA5B;;AAkBAC,OAAOC,OAAP,GAAiBnB,SAASoB,KAAT,CAAe,eAAf,EAAgChB,mBAAhC,CAAjB","file":"api/denialPayment/denialPayment.model.js","sourcesContent":["'use strict';\n\nconst mongoose = require('mongoose');\nmongoose.Promise = require('bluebird');\nconst Schema = mongoose.Schema;\n\nconst DenialPaymentSchema = new Schema({\n  // Payment amount\n  amount: Number,\n  /**\n   * Created\n   */\n  created: {\n    type: Date,\n    default: Date.now\n  },\n  /**\n   * User time when reconciliation was created\n   */\n  userTime: {type: Date},\n  // Customer\n  customer: {type: Schema.Types.ObjectId, ref: 'Customer', required: true},\n});\n\nmodule.exports = mongoose.model('DenialPayment', DenialPaymentSchema);\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}