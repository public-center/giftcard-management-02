{"version":3,"sources":["api/admin/index.js"],"names":["express","require","controller","config","auth","router","Router","get","hasRole","getDenials","post","setCardStatus","recreateRejectionHistory","addDeduction","systemTime","testCallback","fixBiLogDuplications","fixInventoryDuplications","recalculateTransactions","fixLqApiCustomerCompany","put","sendCallbackFromActivity","cleanUpBILogs","sendAccountingEmail","module","exports"],"mappings":"AAAA;;AASA;;;;;;AAPA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,oBAAR,CAAnB;AACA,IAAME,SAASF,QAAQ,0BAAR,CAAf;AACA,IAAMG,OAAOH,QAAQ,sBAAR,CAAb;;AAEA,IAAMI,SAASL,QAAQM,MAAR,EAAf;;AAIA;AACAD,OAAOE,GAAP,CAAW,gDAAX,EAA6DH,KAAKI,OAAL,CAAa,OAAb,CAA7D,EAAoFN,WAAWO,UAA/F;AACA;AACAJ,OAAOK,IAAP,CAAY,gBAAZ,EAA8BN,KAAKI,OAAL,CAAa,OAAb,CAA9B,EAAqDN,WAAWS,aAAhE;AACA;AACAN,OAAOK,IAAP,CAAY,2BAAZ,EAAyCN,KAAKI,OAAL,CAAa,OAAb,CAAzC,EAAgEN,WAAWU,wBAA3E;AACA;AACAP,OAAOK,IAAP,CAAY,eAAZ,EAA6BN,KAAKI,OAAL,CAAa,OAAb,CAA7B,EAAoDN,WAAWW,YAA/D;AACA;AACAR,OAAOK,IAAP,CAAY,aAAZ,EAA2BN,KAAKI,OAAL,CAAa,OAAb,CAA3B,EAAkDN,WAAWY,UAA7D;AACAT,OAAOK,IAAP,CAAY,eAAZ,EAA6BR,WAAWa,YAAxC;AACA;AACAV,OAAOK,IAAP,CAAY,wBAAZ,EAAsCN,KAAKI,OAAL,CAAa,OAAb,CAAtC,EAA6DN,WAAWc,oBAAxE;AACA;AACAX,OAAOK,IAAP,CAAY,4BAAZ,EAA0CN,KAAKI,OAAL,CAAa,OAAb,CAA1C,EAAiEN,WAAWe,wBAA5E;AACA;AACAZ,OAAOK,IAAP,CAAY,2BAAZ,EAAyCN,KAAKI,OAAL,CAAa,OAAb,CAAzC,EAAgEN,WAAWgB,uBAA3E;AACA;AACAb,OAAOK,IAAP,CAAY,kBAAZ,EAAgCN,KAAKI,OAAL,CAAa,OAAb,CAAhC,EAAuDN,WAAWiB,uBAAlE;AACA;AACAd,OAAOe,GAAP,CAAW,kBAAX,EAA+BhB,KAAKI,OAAL,CAAa,OAAb,EAAsB,IAAtB,4BAA/B,EAA6EN,WAAWmB,wBAAxF;AACA;AACAhB,OAAOe,GAAP,CAAW,gBAAX,EAA6BhB,KAAKI,OAAL,CAAa,OAAb,CAA7B,EAAoDN,WAAWoB,aAA/D;AACA;AACAjB,OAAOK,IAAP,CAAY,iCAAZ,EAA+CN,KAAKI,OAAL,CAAa,OAAb,EAAsB,IAAtB,4BAA/C,EAA6FN,WAAWqB,mBAAxG;;AAEAC,OAAOC,OAAP,GAAiBpB,MAAjB","file":"api/admin/index.js","sourcesContent":["'use strict';\n\nconst express = require('express');\nconst controller = require('./admin.controller');\nconst config = require('../../config/environment');\nconst auth = require('../auth/auth.service');\n\nconst router = express.Router();\n\nimport validationRules from './validationRules'\n\n// Get denials since the last time reconciliation was completed\nrouter.get('/denials/begin/:begin/end/:end/:pageSize/:page', auth.hasRole('admin'), controller.getDenials);\n// Set card status\nrouter.post('/setCardStatus', auth.hasRole('admin'), controller.setCardStatus);\n// Recreate rejection history\nrouter.post('/recreateRejectionHistory', auth.hasRole('admin'), controller.recreateRejectionHistory);\n// Add deduction\nrouter.post('/addDeduction', auth.hasRole('admin'), controller.addDeduction);\n// Fill in system time\nrouter.post('/systemTime', auth.hasRole('admin'), controller.systemTime);\nrouter.post('/testCallback', controller.testCallback);\n// Fix BI log duplications\nrouter.post('/biLog/fixDuplications', auth.hasRole('admin'), controller.fixBiLogDuplications);\n// Fix inventory duplications\nrouter.post('/inventory/fixDuplications', auth.hasRole('admin'), controller.fixInventoryDuplications);\n// Recalculate transactions\nrouter.post('/recalculate/transactions', auth.hasRole('admin'), controller.recalculateTransactions);\n// Seperate out API customers by company\nrouter.post('/lq/customer/fix', auth.hasRole('admin'), controller.fixLqApiCustomerCompany);\n// Send payment initiated callbacks\nrouter.put('/callbacks/:type', auth.hasRole('admin', true, validationRules), controller.sendCallbackFromActivity);\n// Clean up BI request logs\nrouter.put('/cleanUpBILogs', auth.hasRole('admin'), controller.cleanUpBILogs);\n// Send emails\nrouter.post('/sendAccountingEmail/:companyId', auth.hasRole('admin', true, validationRules), controller.sendAccountingEmail);\n\nmodule.exports = router;\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}