{"version":3,"sources":["api/admin/validationRules.js"],"names":["rule","type","indexOf","message","val","ids","split","id","async","model"],"mappings":";;;;;;AAAA;;AAEA;;;kBAGe;AACb,sBAAoB;AAClB,YAAQ,CACN,EAACA,MAAM,cAAUC,IAAV,EAAgB;AACrB,eAAO,CAAC,eAAD,EAAkB,oBAAlB,EAAwC,gBAAxC,EAA0D,QAA1D,EAAoEC,OAApE,CAA4ED,IAA5E,IAAoF,CAAC,CAA5F;AACD,OAFD,EAEGE,SAAS,uBAFZ,EADM,CADU;AAMlB,mBAAe,CACb,EAACH,MAAM,cAAUI,GAAV,EAAe;AACpB,YAAMC,MAAMD,IAAIE,KAAJ,CAAU,GAAV,CAAZ;;AADoB;AAAA;AAAA;;AAAA;AAGpB,+BAAiBD,GAAjB,8HAAsB;AAAA,gBAAXE,EAAW;;AACpB,gBAAI,CAAC,4BAAWA,EAAX,CAAL,EAAqB;AACnB,qBAAO,KAAP;AACD;AACF;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASpB,eAAO,IAAP;AACD,OAVD,EAUGJ,SAAS,mBAVZ,EADa;AANG,GADP;AAqBb,qCAAmC;AACjC,iBAAa,CACX,EAACH,4BAAD,EAAmBG,SAAS,uBAA5B,EADW,EAEX,EAACK,+BAAD,EAAsBC,OAAO,SAA7B,EAAwCN,SAAS,wBAAjD,EAFW,CADoB;AAKjC,iBAAa,CACX,EAACH,0BAAD,EAAiBG,SAAS,4BAA1B,EADW,EAEX,EAACH,4BAAD,EAAmBG,SAAS,wBAA5B,EAFW,CALoB;AASjC,oBAAgB,CACd,EAACH,0BAAD,EAAiBG,SAAS,+BAA1B,EADc,EAEd,EAACH,4BAAD,EAAmBG,SAAS,2BAA5B,EAFc;AATiB;AArBtB,C","file":"api/admin/validationRules.js","sourcesContent":["import {isObjectId, recordExists, isString, isNotEmpty} from '../../helpers/validation';\n\n/**\n * Validation rules for callbackLog route\n */\nexport default {\n  '/callbacks/:type': {\n    'type': [\n      {rule: function (type) {\n        return ['cardFinalized', 'cqPaymentInitiated', 'needsAttention', 'denial'].indexOf(type) > -1;\n      }, message: 'Invalid callback type'}\n    ],\n    'inventories': [\n      {rule: function (val) {\n        const ids = val.split(',');\n\n        for (const id of ids) {\n          if (!isObjectId(id)) {\n            return false;\n          }\n        }\n\n        return true;\n      }, message: 'Invalid object ID'}\n    ]\n  },\n  '/sendAccountingEmail/:companyId': {\n    'companyId': [\n      {rule: isObjectId, message: 'Company ID is invalid'},\n      {async: recordExists, model: 'Company', message: 'Company does not exist'}\n    ],\n    'emailBody': [\n      {rule: isString, message: 'Email body is not a string'},\n      {rule: isNotEmpty, message: 'Email body is required'}\n    ],\n    'emailSubject': [\n      {rule: isString, message: 'Email subject is not a string'},\n      {rule: isNotEmpty, message: 'Email subject is required'}\n    ]\n  }\n}\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}