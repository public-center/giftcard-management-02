{"version":3,"sources":["api/customer/index.js"],"names":["express","require","controller","config","auth","router","Router","get","isAuthenticated","searchCustomers","hasRole","getAllCustomers","findCustomerById","findCustomersThisCompany","getCustomersThisStore","findCustomersWithDenials","post","newCustomer","assignCustomerToCard","updateCustomer","updateCustomerDenialTotal","cashPayment","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,uBAAR,CAAnB;AACA,IAAME,SAASF,QAAQ,0BAAR,CAAf;AACA,IAAMG,OAAOH,QAAQ,sBAAR,CAAb;;AAEA,IAAMI,SAASL,QAAQM,MAAR,EAAf;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgBH,KAAKI,eAAL,EAAhB,EAAwCN,WAAWO,eAAnD;AACA;AACAJ,OAAOE,GAAP,CAAW,MAAX,EAAmBH,KAAKM,OAAL,CAAa,OAAb,CAAnB,EAA0CR,WAAWS,eAArD;AACA;AACAN,OAAOE,GAAP,CAAW,cAAX,EAA2BH,KAAKI,eAAL,EAA3B,EAAmDN,WAAWU,gBAA9D;AACA;AACAP,OAAOE,GAAP,CAAW,qBAAX,EAAkCH,KAAKI,eAAL,EAAlC,EAA0DN,WAAWW,wBAArE;AACA;AACAR,OAAOE,GAAP,CAAW,iBAAX,EAA8BH,KAAKI,eAAL,EAA9B,EAAsDN,WAAWY,qBAAjE;AACA;AACAT,OAAOE,GAAP,CAAW,cAAX,EAA2BH,KAAKM,OAAL,CAAa,OAAb,CAA3B,EAAkDR,WAAWa,wBAA7D;AACA;AACAV,OAAOW,IAAP,CAAY,GAAZ,EAAiBZ,KAAKI,eAAL,EAAjB,EAAyCN,WAAWe,WAApD;AACA;AACAZ,OAAOW,IAAP,CAAY,iBAAZ,EAA+BZ,KAAKI,eAAL,EAA/B,EAAuDN,WAAWgB,oBAAlE;AACA;AACAb,OAAOW,IAAP,CAAY,cAAZ,EAA4BZ,KAAKI,eAAL,EAA5B,EAAoDN,WAAWiB,cAA/D;AACA;AACAd,OAAOW,IAAP,CAAY,sBAAZ,EAAoCZ,KAAKM,OAAL,CAAa,OAAb,CAApC,EAA2DR,WAAWkB,yBAAtE;AACA;AACAf,OAAOW,IAAP,CAAY,kCAAZ,EAAgDZ,KAAKM,OAAL,CAAa,UAAb,CAAhD,EAA0ER,WAAWmB,WAArF;;AAEAC,OAAOC,OAAP,GAAiBlB,MAAjB","file":"api/customer/index.js","sourcesContent":["'use strict';\n\nconst express = require('express');\nconst controller = require('./customer.controller');\nconst config = require('../../config/environment');\nconst auth = require('../auth/auth.service');\n\nconst router = express.Router();\n\n// Search customers\nrouter.get('/', auth.isAuthenticated(), controller.searchCustomers);\n// All customers\nrouter.get('/all', auth.hasRole('admin'), controller.getAllCustomers);\n// Retrieve customer by ID\nrouter.get('/:customerId', auth.isAuthenticated(), controller.findCustomerById);\n// Retrieve customers this company\nrouter.get('/company/:companyId', auth.isAuthenticated(), controller.findCustomersThisCompany);\n// Retrieve customers this company\nrouter.get('/store/:storeId', auth.isAuthenticated(), controller.getCustomersThisStore);\n// Retrieve all customers with denials\nrouter.get('/denials/all', auth.hasRole('admin'), controller.findCustomersWithDenials);\n// New customer\nrouter.post('/', auth.isAuthenticated(), controller.newCustomer);\n// Assign a customer to an inventory\nrouter.post('/assignCustomer', auth.isAuthenticated(), controller.assignCustomerToCard);\n// Update customer\nrouter.post('/:customerId', auth.isAuthenticated(), controller.updateCustomer);\n// Update customer total\nrouter.post('/denials/updateTotal', auth.hasRole('admin'), controller.updateCustomerDenialTotal);\n// Make a cash payment against denials\nrouter.post('/:customerId/denials/cashPayment', auth.hasRole('employee'), controller.cashPayment);\n\nmodule.exports = router;\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}