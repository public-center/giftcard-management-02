{"version":3,"sources":["api/batch/batch.model.js"],"names":["mongoose","require","Promise","Schema","BatchSchema","created","type","Date","default","now","batchId","Number","required","company","Types","ObjectId","ref","store","inventories","indexes","unique","pre","next","constructor","findOne","sort","limit","then","batch","module","exports","model"],"mappings":"AAAA;;AAGA;;;;;;AADA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEAD,SAASE,OAAT,GAAmBD,QAAQ,UAAR,CAAnB;AACA,IAAME,SAASH,SAASG,MAAxB;;AAEA,IAAMC,cAAc,IAAID,MAAJ,CAAW;AAC7BE,WAAS;AACPC,UAAMC,IADC;AAEPC,aAASD,KAAKE;AAFP,GADoB;AAK7B;AACAC,WAAS,EAACJ,MAAMK,MAAP,EAAeC,UAAU,IAAzB,EANoB;AAO7B;AACAC,WAAS,EAACP,MAAMH,OAAOW,KAAP,CAAaC,QAApB,EAA8BC,KAAK,OAAnC,EARoB;AAS7B;AACAC,SAAO,EAACX,MAAMH,OAAOW,KAAP,CAAaC,QAApB,EAA8BC,KAAK,OAAnC,EAVsB;AAW7B;AACAE,eAAa,CAAC,EAACZ,MAAMH,OAAOW,KAAP,CAAaC,QAApB,EAA8BC,KAAK,WAAnC,EAAD;AAZgB,CAAX,CAApB;;AAeA;AACA,IAAMG,UAAU;AACd;AACA,CAAC,EAACT,SAAS,CAAV,EAAD,EAAe,EAACU,QAAQ,IAAT,EAAf,CAFc,CAAhB;AAIA;AACA,uBAAchB,WAAd,EAA2Be,OAA3B;;AAEAf,YACGiB,GADH,CACO,UADP,EACmB,UAASC,IAAT,EAAe;AAAA;;AAC9B,OAAKC,WAAL,CAAiBC,OAAjB,CAAyB,EAAzB,EACGC,IADH,CACQ;AACJf,aAAS,CAAC;AADN,GADR,EAIGgB,KAJH,CAIS,CAJT,EAKGC,IALH,CAKQ,iBAAS;AACb,QAAI,CAACC,KAAL,EAAY;AACV,YAAKlB,OAAL,GAAe,CAAf;AACD,KAFD,MAEO;AACL,YAAKA,OAAL,GAAekB,MAAMlB,OAAN,GAAgB,CAA/B;AACD;AACDY;AACD,GAZH;AAaD,CAfH;;AAiBAO,OAAOC,OAAP,GAAiB9B,SAAS+B,KAAT,CAAe,OAAf,EAAwB3B,WAAxB,CAAjB","file":"api/batch/batch.model.js","sourcesContent":["'use strict';\n\nconst mongoose = require('mongoose');\nimport createIndexes from '../../config/indexDb';\nmongoose.Promise = require('bluebird');\nconst Schema = mongoose.Schema;\n\nconst BatchSchema = new Schema({\n  created: {\n    type: Date,\n    default: Date.now\n  },\n  // Batch number\n  batchId: {type: Number, required: true},\n  // Company\n  company: {type: Schema.Types.ObjectId, ref: 'Store'},\n  // Store ID\n  store: {type: Schema.Types.ObjectId, ref: 'Store'},\n  // Inventories\n  inventories: [{type: Schema.Types.ObjectId, ref: 'Inventory'}]\n});\n\n// Indexes\nconst indexes = [\n  // Unique card index\n  [{batchId: 1}, {unique: true}],\n];\n// @todo Did not work\ncreateIndexes(BatchSchema, indexes);\n\nBatchSchema\n  .pre('validate', function(next) {\n    this.constructor.findOne({})\n      .sort({\n        batchId: -1\n      })\n      .limit(1)\n      .then(batch => {\n        if (!batch) {\n          this.batchId = 1;\n        } else {\n          this.batchId = batch.batchId + 1;\n        }\n        next();\n      });\n  });\n\nmodule.exports = mongoose.model('Batch', BatchSchema);\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}