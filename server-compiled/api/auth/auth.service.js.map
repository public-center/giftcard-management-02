{"version":3,"sources":["api/auth/auth.service.js"],"names":["mongoose","require","isValid","Types","ObjectId","Promise","jwt","expressJwt","compose","config","User","validateJwt","secret","secrets","session","validateObjectIds","req","res","next","params","valid","forEach","val","key","toLowerCase","idLength","substring","length","e","status","code","json","skipObjectIdValidation","getValidationType","args","ignoreObjectIdValidation","structuredValidation","isPlainObject","isAuthenticated","arguments","valFn","use","query","hasOwnProperty","headers","authorization","access_token","send","id","user","_id","findById","err","hasRole","roleRequired","Error","Array","prototype","slice","call","meetsRequirements","userRoles","indexOf","role","companyId","company","toString","storeId","store","signToken","sign","expiresIn","setTokenCookie","message","token","cookie","JSON","stringify","redirect","exports"],"mappings":"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","file":"api/auth/auth.service.js","sourcesContent":["'use strict';\n\nimport _ from 'lodash';\nconst mongoose = require('mongoose');\nconst isValid = mongoose.Types.ObjectId.isValid;\nmongoose.Promise = require('bluebird');\nconst jwt = require('jsonwebtoken');\nconst expressJwt = require('express-jwt');\nconst compose = require('composable-middleware');\n\nconst config = require('../../config/environment');\nconst User = require('../user/user.model');\nconst validateJwt = expressJwt({ secret: config.secrets.session });\nimport {checkStructuredValidation} from '../../helpers/validation';\nimport {invalidObjectId} from '../../exceptions/exceptions';\n\n/**\n * Check to make sure all ObjectIds are valid\n */\nfunction validateObjectIds(req, res, next) {\n  // No params\n  if (!req || !req.params) {\n    return next();\n  }\n  let valid = true;\n  // Check valid object IDs\n  _.forEach(req.params, (val, key) => {\n    key = key.toLowerCase();\n    const idLength = 2;\n    try {\n      // Make sure we have a valid object ID\n      if (key.substring(key.length - idLength) === 'id') {\n        // All is an exception for corporate admin\n        if (!isValid(val) && val.toLowerCase() !== 'all') {\n          valid = false;\n        }\n      }\n    } catch (e) {\n      return next();\n    }\n  });\n  // Invalid ObjectID passed in\n  if (!valid) {\n    return res.status(invalidObjectId.code).json(invalidObjectId.res);\n  }\n  next();\n}\n\n/**\n * Skip validation of object IDs\n */\nfunction skipObjectIdValidation(req, res, next) {\n  next();\n}\n\n/**\n * Get validation type for middleware\n * @param args\n * @return {[*,*]}\n */\nfunction getValidationType(args) {\n  let ignoreObjectIdValidation = false;\n  let structuredValidation = null;\n  // Both types of validation\n  if (args.length === 2) {\n    [ignoreObjectIdValidation, structuredValidation] = args;\n  }\n  // A single type of validation\n  if (args.length) {\n    // Just skipping object validation\n    if (typeof args[0] === 'boolean') {\n      ignoreObjectIdValidation = args[0];\n    } else if (_.isPlainObject(args[0])) {\n      structuredValidation = args[0];\n    }\n  }\n  return [ignoreObjectIdValidation, structuredValidation];\n}\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nfunction isAuthenticated() {\n  const [ignoreObjectIdValidation, structuredValidation] = getValidationType(arguments);\n  const valFn = ignoreObjectIdValidation ? skipObjectIdValidation : validateObjectIds;\n  return compose()\n    // Validate jwt\n    .use(function(req, res, next) {\n      // allow access_token to be passed through query parameter as well\n      if(req.query && req.query.hasOwnProperty('access_token')) {\n        req.headers.authorization = 'Bearer ' + req.query.access_token;\n      }\n      if (!req.headers.authorization) {\n        res.status(401).send('Unauthorized');\n        return next();\n      }\n      try {\n        validateJwt(req, res, next)\n      } catch (e) {\n        next();\n      }\n    })\n    // Attach user to request\n    .use(function(req, res, next) {\n      const id = req.user ? req.user._id : null;\n      User.findById(id, function (err, user) {\n        if (err) {\n          return next(err);\n        }\n        if (!user) {\n          return res.status(401).send('Unauthorized');\n        }\n        req.user = user;\n        next();\n      });\n    })\n    .use(valFn)\n    .use(checkStructuredValidation(structuredValidation));\n}\n\n/**\n * Checks if the user role meets the minimum requirements of the route\n */\nfunction hasRole(roleRequired) {\n  if (!roleRequired) {\n    throw new Error('Required role needs to be set');\n  }\n  const [ignoreObjectIdValidation, structuredValidation] = getValidationType(Array.prototype.slice.call(arguments, 1));\n  const valFn = ignoreObjectIdValidation ? skipObjectIdValidation : validateObjectIds;\n\n  return compose()\n  .use(isAuthenticated())\n  .use(function meetsRequirements(req, res, next) {\n    if (config.userRoles.indexOf(req.user.role) >= config.userRoles.indexOf(roleRequired)) {\n      next();\n    } else {\n      res.status(403).send('Forbidden');\n    }\n  })\n  // Make sure that corporate admins and employees only modify the companies or stores they're related to\n  .use((req, res, next) => {\n    // If a corporate admin is requested, and the company is in the request, check to make sure it's the right company\n    if (roleRequired === 'corporate-admin' && req.user.role === 'corporate-admin' && req.params.companyId) {\n      // Compare requested company with user company\n      if (req.user.company.toString() === req.params.companyId) {\n        return next();\n      } else {\n        return res.status(403).send('Incorrect company');\n      }\n    }\n    // Check to make sure the employee is requesting the store they work for\n    if (roleRequired === 'employee' && req.user.role === 'employee' && req.params.storeId) {\n      if (req.user.store.toString() === req.params.storeId) {\n        return next();\n      } else {\n        return res.status(403).send('Invalid store');\n      }\n    }\n    next();\n  })\n  .use(valFn)\n  .use(checkStructuredValidation(structuredValidation));\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nfunction signToken(id) {\n  return jwt.sign({ _id: id }, config.secrets.session, { expiresIn: 86400 });\n}\n\n/**\n * Set token cookie directly for oAuth strategies\n */\nfunction setTokenCookie(req, res) {\n  if (!req.user) return res.status(404).json({ message: 'Something went wrong, please try again.'});\n  const token = signToken(req.user._id, req.user.role);\n  res.cookie('token', JSON.stringify(token));\n  res.redirect('/');\n}\n\nexports.isAuthenticated = isAuthenticated;\nexports.hasRole = hasRole;\nexports.signToken = signToken;\nexports.setTokenCookie = setTokenCookie;\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}