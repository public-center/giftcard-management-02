{"version":3,"sources":["api/auth/local/passport.js"],"names":["passport","require","LocalStrategy","Strategy","exports","setup","User","config","use","usernameField","passwordField","email","password","done","findOne","toLowerCase","err","user","message","authenticate"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,gBAAgBD,QAAQ,gBAAR,EAA0BE,QAAhD;;AAEAC,QAAQC,KAAR,GAAgB,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACtCP,WAASQ,GAAT,CAAa,IAAIN,aAAJ,CAAkB;AAC3BO,mBAAe,OADY;AAE3BC,mBAAe,UAFY,CAED;AAFC,GAAlB,EAIX,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC9BP,SAAKQ,OAAL,CAAa;AACXH,aAAOA,MAAMI,WAAN;AADI,KAAb,EAEG,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACrB,UAAID,GAAJ,EAAS,OAAOH,KAAKG,GAAL,CAAP;;AAET,UAAI,CAACC,IAAL,EAAW;AACT,eAAOJ,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEK,SAAS,+BAAX,EAAlB,CAAP;AACD;AACD,UAAI,CAACD,KAAKE,YAAL,CAAkBP,QAAlB,CAAL,EAAkC;AAChC,eAAOC,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEK,SAAS,+BAAX,EAAlB,CAAP;AACD;AACD,aAAOL,KAAK,IAAL,EAAWI,IAAX,CAAP;AACD,KAZD;AAaD,GAlBU,CAAb;AAoBD,CArBD","file":"api/auth/local/passport.js","sourcesContent":["const passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\n\nexports.setup = function (User, config) {\n  passport.use(new LocalStrategy({\n      usernameField: 'email',\n      passwordField: 'password' // this is the virtual field on the model\n    },\n    function(email, password, done) {\n      User.findOne({\n        email: email.toLowerCase()\n      }, function(err, user) {\n        if (err) return done(err);\n\n        if (!user) {\n          return done(null, false, { message: 'This email is not registered.' });\n        }\n        if (!user.authenticate(password)) {\n          return done(null, false, { message: 'This password is not correct.' });\n        }\n        return done(null, user);\n      });\n    }\n  ));\n};\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}