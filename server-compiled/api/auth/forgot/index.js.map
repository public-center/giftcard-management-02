{"version":3,"sources":["api/auth/forgot/index.js"],"names":["express","require","router","Router","config","tokenLifespan","post","req","res","next","email","body","findOne","then","user","resetPassword","_id","token","generateToken","save","resetLink","frontendBaseUrl","sendResetPasswordEmail","error","response","console","log","errors","create","method","controller","revision","stack","setTimeout","remove","json","catch","err","status","module","exports"],"mappings":"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","file":"api/auth/forgot/index.js","sourcesContent":["'use strict';\n\nimport User from '../../user/user.model';\nimport ResetPasswordToken from '../../user/resetPasswordToken.model';\nimport mailer from '../../mailer';\nimport ErrorLog from '../../errorLog/errorLog.model';\nimport {getGitRev} from '../../../helpers/errors';\n\nconst express = require('express');\nconst router = express.Router();\nconst config = require('../../../config/environment');\n\n// Token lifespan in milliseconds\nconst tokenLifespan = 60 * 60 * 1000;\n\nrouter.post('/', (req, res, next) => {\n  const {email} = req.body;\n\n  User.findOne({email})\n  .then(user => {\n    if (! user) {\n      throw 'notFound';\n    }\n\n    const resetPassword = new ResetPasswordToken({\n      user: user._id\n    });\n\n    const token = resetPassword.generateToken(function () {\n      resetPassword.save();\n    });\n\n    let resetLink = config.frontendBaseUrl;\n    resetLink += 'auth/reset-password?id=' + resetPassword._id;\n    resetLink += '&token=' + token;\n\n    mailer.sendResetPasswordEmail(email, {resetLink}, async function (error, response) {\n      if (error) {\n\n        console.log('*****************ERROR WITH SENDGRID*****************');\n        console.log(error);\n        if (error.response && error.response.body && error.response.body.errors) {\n          console.log('**************ERROR OBJECT**********');\n          console.log(error.response.body.errors);\n          await ErrorLog.create({\n            method: 'sendResetPasswordEmail',\n            controller: 'auth.forgot',\n            revision: getGitRev(),\n            stack: error.stack,\n            error: error.response.body.errors,\n            user: req.user._id\n          });\n        } else {\n          await ErrorLog.create({\n            method: 'sendResetPasswordEmail',\n            controller: 'auth.forgot',\n            revision: getGitRev(),\n            stack: error.stack,\n            error: error,\n            user: req.user._id\n          });\n        }\n      }\n    });\n\n    setTimeout(function () {\n      resetPassword.remove();\n    }, tokenLifespan);\n\n    return res.json({});\n  })\n  .catch(async err => {\n\n    if (err === 'notFound') {\n      return res.status(400).json({error: 'User not found.'});\n    }\n\n    await ErrorLog.create({\n      method: 'forgotpassword',\n      controller: 'auth.forgot',\n      revision: getGitRev(),\n      stack: err.stack,\n      error: err,\n      user: req.user._id\n    });\n\n    console.log('*****************ERROR IN FORGOTPASSWORD*****************');\n    console.log(err);\n\n    return res.status(500).json({error: 'Something went wrong.'});\n  });\n});\n\nmodule.exports = router;\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}