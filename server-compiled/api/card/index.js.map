{"version":3,"sources":["api/card/index.js"],"names":["express","require","controller","config","auth","multer","upload","dest","__dirname","router","Router","get","isAuthenticated","getExistingCards","getExistingCardsReceipt","post","checkBalance","updateBalance","newCard","hasRole","array","uploadCards","uploadFixes","editCard","addToInventory","delete","deleteCard","modifyInventory","updateDetails","createFakeCards","runBi","moveForSale","editBalance","isStaging","setCardValue","massUpdate","rejectCards","resellCards","module","exports"],"mappings":"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","file":"api/card/index.js","sourcesContent":["'use strict';\n\nconst express = require('express');\nconst controller = require('./card.controller');\nconst config = require('../../config/environment');\nconst auth = require('../auth/auth.service');\nconst multer = require('multer');\nconst upload = multer({dest: __dirname + '/uploads/'});\n\nconst router = express.Router();\n\n// Retrieve existing cards for this customer\nrouter.get('/:customerId', auth.isAuthenticated(), controller.getExistingCards);\n// Retrieve cards for receipt this customer\nrouter.get('/:customerId/receipt', auth.isAuthenticated(), controller.getExistingCardsReceipt);\n// Check a card balance\nrouter.post('/balance', auth.isAuthenticated(), controller.checkBalance);\n// Update card balance\nrouter.post('/balance/update', auth.isAuthenticated(), controller.updateBalance);\n// Input a new card\nrouter.post('/newCard', auth.isAuthenticated(), controller.newCard);\n// Upload cards file\nrouter.post('/upload', auth.hasRole('employee'), upload.array('file', 1), controller.uploadCards);\n// Upload fixes file\nrouter.post('/upload/fixes', auth.hasRole('employee'), upload.array('file', 1), controller.uploadFixes);\n// Edit existing card\nrouter.post('/edit', auth.isAuthenticated(), controller.editCard);\n// Add to inventory\nrouter.post('/addToInventory', auth.isAuthenticated(), controller.addToInventory);\n// Delete an existing card\nrouter.delete('/:cardId', auth.isAuthenticated(), controller.deleteCard);\n\n/**\n * Admin functions\n */\nrouter.post('/modify', auth.hasRole('admin'), controller.modifyInventory);\n// Change any kind of information about a card\nrouter.post('/updateDetails', auth.hasRole('admin'), controller.updateDetails);\n// Create fake cards\nrouter.post('/fake', auth.hasRole('employee'), controller.createFakeCards);\n// Run BI on cards\nrouter.post('/runBi', auth.hasRole('employee'), controller.runBi);\n// Move cards for sale\nrouter.post('/moveForSale', auth.hasRole('employee'), controller.moveForSale);\n// Edit balance\nrouter.post('/edit/balance', auth.hasRole('admin'), controller.editBalance);\n// Set ship status\nif (config.isStaging) {\n  router.post('/edit/setCardValue', auth.hasRole('employee'), controller.setCardValue);\n} else {\n  router.post('/edit/setCardValue', auth.hasRole('admin'), controller.setCardValue);\n}\n// Mass update catch\nrouter.post('/massUpdate', auth.hasRole('admin'), controller.massUpdate);\n// Reject inventories\nrouter.post('/reject', auth.hasRole('admin'), controller.rejectCards);\n// Resell cards\nrouter.post('/resell', auth.hasRole('admin'), controller.resellCards);\n\n/**\n * Corporate admin functions\n */\n// Set card value from corporate activity page\nrouter.post('/company/:companyId/edit/setCardValue', auth.hasRole('corporate-admin'), controller.setCardValue);\n// Mass update inventories from corporate activity page\nrouter.post('/company/:companyId/massUpdate', auth.hasRole('corporate-admin'), controller.massUpdate);\n\nmodule.exports = router;\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}