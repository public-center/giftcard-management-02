{"version":3,"sources":["api/card/card.socket.js"],"names":["card","require","exposeSocket","socket","setSocket","outOfRuns","Object","assign","cardId","emit","updateInventory","socketUpdate","inventory","exports","register","schema","post","doc","onSave","onRemove","cb"],"mappings":";;;;;AAAA;;;;AAIA,IAAMA,OAAOC,QAAQ,cAAR,CAAb;;AAEA;;;;AAIA,IAAMC,eAAe;AACnBC,UAAQ,IADW;AAEnBC,WAFmB,qBAETD,MAFS,EAED;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACD;AAJkB,CAArB;;AAOA;;;AAGO,IAAME,gCAAYC,OAAOC,MAAP,CAAc,EAAd,EAAkBL,YAAlB,EAAgC;AACvDG,WADuD,qBAC7CG,MAD6C,EACrC;AAChB,QAAI,KAAKL,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYM,IAAZ,CAAiB,gBAAjB,EAAmCD,MAAnC;AACD;AACF;AALsD,CAAhC,CAAlB;;AAQP;;;AAGO,IAAME,4CAAkBJ,OAAOC,MAAP,CAAc,EAAd,EAAkBL,YAAlB,EAAgC;AAC7DS,cAD6D,wBAChDC,SADgD,EACrC;AACtB,QAAI,KAAKT,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYM,IAAZ,CAAiB,2BAAjB,EAA8CG,SAA9C;AACD;AACF;AAL4D,CAAhC,CAAxB;;AAQPC,QAAQC,QAAR,GAAmB,UAASX,MAAT,EAAiB;AAClCH,OAAKe,MAAL,CAAYC,IAAZ,CAAiB,MAAjB,EAAyB,UAAUC,GAAV,EAAe;AACtCC,WAAOf,MAAP,EAAec,GAAf;AACD,GAFD;AAGAjB,OAAKe,MAAL,CAAYC,IAAZ,CAAiB,QAAjB,EAA2B,UAAUC,GAAV,EAAe;AACxCE,aAAShB,MAAT,EAAiBc,GAAjB;AACD,GAFD;AAGA;AACAZ,YAAUD,SAAV,CAAoBD,MAApB;AACA;AACAO,kBAAgBN,SAAhB,CAA0BD,MAA1B;AACD,CAXD;;AAaA,SAASe,MAAT,CAAgBf,MAAhB,EAAwBc,GAAxB,EAA6BG,EAA7B,EAAiC;AAC/BjB,SAAOM,IAAP,CAAY,WAAZ,EAAyBQ,GAAzB;AACD;;AAED,SAASE,QAAT,CAAkBhB,MAAlB,EAA0Bc,GAA1B,EAA+BG,EAA/B,EAAmC;AACjCjB,SAAOM,IAAP,CAAY,aAAZ,EAA2BQ,GAA3B;AACD","file":"api/card/card.socket.js","sourcesContent":["/**\n * Broadcast when a card update happens on the backend\n * @type {*|exports|module.exports}\n */\nconst card = require('./card.model');\n\n/**\n * Expose socket\n * @type {{socket: null, setSocket: (function(*))}}\n */\nconst exposeSocket = {\n  socket: null,\n  setSocket(socket) {\n    this.socket = socket;\n  }\n};\n\n/**\n * Expose socket so that we can emit out of runs\n */\nexport const outOfRuns = Object.assign({}, exposeSocket, {\n  outOfRuns(cardId) {\n    if (this.socket) {\n      this.socket.emit('card:outOfRuns', cardId);\n    }\n  }\n});\n\n/**\n * Update inventory\n */\nexport const updateInventory = Object.assign({}, exposeSocket, {\n  socketUpdate(inventory) {\n    if (this.socket) {\n      this.socket.emit('inventory:updateInventory', inventory);\n    }\n  }\n});\n\nexports.register = function(socket) {\n  card.schema.post('save', function (doc) {\n    onSave(socket, doc);\n  });\n  card.schema.post('remove', function (doc) {\n    onRemove(socket, doc);\n  });\n  // Expose socket for external methods\n  outOfRuns.setSocket(socket);\n  // Expose inventory update\n  updateInventory.setSocket(socket);\n};\n\nfunction onSave(socket, doc, cb) {\n  socket.emit('card:save', doc);\n}\n\nfunction onRemove(socket, doc, cb) {\n  socket.emit('card:remove', doc);\n}\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}