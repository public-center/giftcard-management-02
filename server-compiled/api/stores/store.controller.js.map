{"version":3,"sources":["api/stores/store.controller.js"],"names":["req","res","query","perPage","offset","receiptService","Object","assign","pick","store","user","Promise","all","getReceiptsCount","getReceipts","parseInt","totalReceipts","receipts","json","data","pagination","total","console","log","create","method","controller","revision","stack","error","status","Retailer","require","Card"],"mappings":"AAAA;;;;;;;;;AAsBA;;;;qEAGO,iBAA2BA,GAA3B,EAAgCC,GAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC8BD,IAAIE,KADlC,kCACEC,OADF,EACEA,OADF,sCACY,EADZ,sDACgBC,MADhB,EACgBA,MADhB,qCACyB,CADzB;AAAA;AAIGC,0BAJH,GAIoB,uBAJpB;AAKGH,iBALH,GAKWI,OAAOC,MAAP,CAAc,EAAd,EAAkB,iBAAEC,IAAF,CAAOR,IAAIE,KAAX,EAAkB,CAAC,SAAD,CAAlB,CAAlB,EAAkD,EAACO,OAAOT,IAAIU,IAAJ,CAASD,KAAjB,EAAlD,CALX;AAAA;AAAA,mBAMqCE,QAAQC,GAAR,CAAY,CAClDP,eAAeQ,gBAAf,CAAgCX,KAAhC,CADkD,EAElDG,eAAeS,WAAf,CAA2BZ,KAA3B,EAAkC,EAACC,SAASY,SAASZ,OAAT,EAAkB,EAAlB,CAAV,EAAiCC,QAAQW,SAASX,MAAT,EAAiB,EAAjB,CAAzC,EAAlC,CAFkD,CAAZ,CANrC;;AAAA;AAAA;AAAA;AAMIY,yBANJ;AAMmBC,oBANnB;;;AAWHhB,gBAAIiB,IAAJ,CAAS;AACPC,oBAAMF,QADC;AAEPG,0BAAY;AACVC,uBAAOL;AADG;AAFL,aAAT;AAXG;AAAA;;AAAA;AAAA;AAAA;;AAkBHM,oBAAQC,GAAR,CAAY,6CAAZ;AACAD,oBAAQC,GAAR;AAnBG;AAAA,mBAoBG,mBAASC,MAAT,CAAgB;AACpBC,sBAAQ,aADY;AAEpBC,0BAAY,kBAFQ;AAGpBC,wBAAU,wBAHU;AAIpBC,qBAAO,YAAIA,KAJS;AAKpBC;AALoB,aAAhB,CApBH;;AAAA;AAAA,6CA2BI5B,IAAI6B,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,aA3BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeJ,W;;;;;AAvBtB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;AAEA;;;;;;;;AARA,IAAMiB,WAAWC,QAAQ,4BAAR,CAAjB;AACA,IAAMC,OAAOD,QAAQ,oBAAR,CAAb","file":"api/stores/store.controller.js","sourcesContent":["'use strict';\n\nimport '../company/autoBuyRate.model';\nimport '../company/companySettings.model';\nimport '../inventory/InventoryCache.model';\nimport '../inventory/inventoryParamCache.model';\nimport '../log/logs.model';\nimport '../company/company.model';\nimport '../card/card.model';\nimport '../stores/store.model';\nimport '../reserve/reserve.model';\n\nconst Retailer = require('../retailer/retailer.model');\nconst Card = require('../card/card.model');\nimport Receipt from '../receipt/receipt.model';\nimport ReceiptService from '../receipt/receipt.service';\n\nimport ErrorLog from '../errorLog/errorLog.model';\nimport {getGitRev} from '../../helpers/errors';\n\nimport _ from 'lodash';\n\n/**\n * Retrieve store receipts\n */\nexport async function getReceipts(req, res) {\n  const {perPage = 20, offset = 0} = req.query;\n\n  try {\n    const receiptService = new ReceiptService();\n    const query = Object.assign({}, _.pick(req.query, ['created']), {store: req.user.store});\n    const [totalReceipts, receipts] = await Promise.all([\n      receiptService.getReceiptsCount(query),\n      receiptService.getReceipts(query, {perPage: parseInt(perPage, 10), offset: parseInt(offset, 10)})\n    ]);\n\n    res.json({\n      data: receipts,\n      pagination: {\n        total: totalReceipts\n      }\n    });\n  } catch (err) {\n    console.log('**************ERR IN GET RECEIPTS**********');\n    console.log(err);\n    await ErrorLog.create({\n      method: 'getReceipts',\n      controller: 'store.controller',\n      revision: getGitRev(),\n      stack: err.stack,\n      error: err\n    });\n    return res.status(500).json(err);\n  }\n}\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}