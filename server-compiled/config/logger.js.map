{"version":3,"sources":["config/logger.js"],"names":["methods","req","res","next","indexOf","method","path","body","params","query","statusCode","statusMessage","logParams","optionalTypes","forEach","value","name","Object","keys","length","create","console","log","logger"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;;;AAEA;AACA,IAAMA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,OAA1B,EAAmC,KAAnC,CAAhB;;;qEAEe,iBAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEPH,QAAQI,OAAR,CAAgBH,IAAII,MAApB,IAA8B,CAAC,CAFxB;AAAA;AAAA;AAAA;;AAGFC,gBAHE,GAGkDL,GAHlD,CAGFK,IAHE,EAGID,MAHJ,GAGkDJ,GAHlD,CAGII,MAHJ,cAGkDJ,GAHlD,CAGYM,IAHZ,EAGYA,IAHZ,6BAGmB,EAHnB,4BAGkDN,GAHlD,CAGuBO,MAHvB,EAGuBA,MAHvB,+BAGgC,EAHhC,6BAGkDP,GAHlD,CAGoCQ,KAHpC,EAGoCA,KAHpC,8BAG4C,EAH5C;AAIFC,sBAJE,GAI2BR,GAJ3B,CAIFQ,UAJE,EAIUC,aAJV,GAI2BT,GAJ3B,CAIUS,aAJV;AAKHC,qBALG,GAKS,EAACN,UAAD,EAAOD,cAAP,EAAeK,sBAAf,EAA2BC,4BAA3B,EALT;AAMHE,yBANG,GAMa,EAACN,UAAD,EAAOC,cAAP,EAAeC,YAAf,EANb;AAOT;;AACA,6BAAEK,OAAF,CAAUD,aAAV,EAAyB,UAACE,KAAD,EAAQC,IAAR,EAAiB;AACxC,kBAAIC,OAAOC,IAAP,CAAYH,KAAZ,EAAmBI,MAAvB,EAA+B;AAC7BP,0BAAUI,IAAV,IAAkBD,KAAlB;AACD;AACF,aAJD;AARS;AAAA,mBAaH,eAAIK,MAAJ,CAAWR,SAAX,CAbG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAiBXS,oBAAQC,GAAR,CAAY,uCAAZ;AACAD,oBAAQC,GAAR;;AAlBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,M;;;;SAAAA,M","file":"config/logger.js","sourcesContent":["import _ from 'lodash';\n\nimport Log from '../api/log/logs.model';\n\n// Target methods to log\nconst methods = ['POST', 'DELETE', 'PUT', 'PATCH', 'GET'];\n\nexport default async function logger(req, res, next) {\n  try {\n    if (methods.indexOf(req.method) > -1) {\n      const {path, method, body = {}, params = {}, query = {}} = req;\n      const {statusCode, statusMessage} = res;\n      const logParams = {path, method, statusCode, statusMessage};\n      const optionalTypes = {body, params, query};\n      // Store optionally query, body, params\n      _.forEach(optionalTypes, (value, name) => {\n        if (Object.keys(value).length) {\n          logParams[name] = value;\n        }\n      });\n      await Log.create(logParams);\n    }\n    // next();\n  } catch (e) {\n    console.log('**************ERR IN LOGGER**********');\n    console.log(e);\n  }\n}\n"],"sourceRoot":"/home/ubuntu14/works/webstromProjects/gcmgr/gulp/es6"}